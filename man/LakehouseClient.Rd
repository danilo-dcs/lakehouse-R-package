% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.r
\name{LakehouseClient}
\alias{LakehouseClient}
\title{LakehouseClient Class}
\description{
LakehouseClient Class

LakehouseClient Class
}
\details{
This class allows users to interact with the lakehouse infrastructure via the lakehouse API and other functionalities.
}
\section{Query String Structure}{

The query string should follow the pattern: \code{KEY[OPERATOR]VALUE}\cr
Supported operators:
\itemize{
  \item \code{=} - Equal to
  \item \code{>} - Greater than
  \item \code{<} - Less than
  \item \code{>=} - Greater than or equal to
  \item \code{<=} - Less than or equal to
  \item \code{*} - Substring match (wildcard)
}


The query string should follow the pattern: \code{KEY[OPERATOR]VALUE}\cr
Supported operators:
\itemize{
  \item \code{=} - Equal to
  \item \code{>} - Greater than
  \item \code{<} - Less than
  \item \code{>=} - Greater than or equal to
  \item \code{<=} - Less than or equal to
  \item \code{*} - Substring match (wildcard)
}
}

\section{Available Output Formats}{

\describe{
  \item{\code{"df"}}{Returns results as a data.frame}
  \item{\code{"json"}}{Returns results as JSON string}
  \item{\code{"dict"}}{Returns results as named list (default)}
  \item{\code{"table"}}{Returns results in pretty-printed table format}
}
#'


\describe{
  \item{\code{"df"}}{Returns results as a data.frame}
  \item{\code{"json"}}{Returns results as JSON string}
  \item{\code{"dict"}}{Returns results as named list (default)}
  \item{\code{"table"}}{Returns results in pretty-printed table format}
}
#'
}

\examples{

## ------------------------------------------------
## Method `LakehouseClient$search_collections_query`
## ------------------------------------------------

\dontrun{
# Basic usage
search_collections_query(self, 'collection_name*lake')

# Multiple conditions
search_collections_query(self,
                        'collection_name*lake',
                        'inserted_by=user1@gmail.com',
                        'inserted_at>1747934722',
                        'public=TRUE',
                        output_format='table')
}


## ------------------------------------------------
## Method `LakehouseClient$search_files_query`
## ------------------------------------------------

\dontrun{
# Basic usage
search_files_query(self, 'file_name*lake')

# Multiple conditions
search_files_query(self,
                        'file_name*lake',
                        'inserted_by=user1@gmail.com',
                        'inserted_at>1747934722',
                        'public=TRUE',
                        output_format='table')
}

}
\seealso{
\code{\link{parse_query_args}} for the query parsing implementation

\code{\link{parse_query_args}} for the query parsing implementation
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LakehouseClient-new}{\code{LakehouseClient$new()}}
\item \href{#method-LakehouseClient-auth}{\code{LakehouseClient$auth()}}
\item \href{#method-LakehouseClient-download_file}{\code{LakehouseClient$download_file()}}
\item \href{#method-LakehouseClient-create_collection}{\code{LakehouseClient$create_collection()}}
\item \href{#method-LakehouseClient-get_dataframe}{\code{LakehouseClient$get_dataframe()}}
\item \href{#method-LakehouseClient-list_buckets}{\code{LakehouseClient$list_buckets()}}
\item \href{#method-LakehouseClient-list_buckets_df}{\code{LakehouseClient$list_buckets_df()}}
\item \href{#method-LakehouseClient-list_buckets_json}{\code{LakehouseClient$list_buckets_json()}}
\item \href{#method-LakehouseClient-list_collections}{\code{LakehouseClient$list_collections()}}
\item \href{#method-LakehouseClient-list_collections_df}{\code{LakehouseClient$list_collections_df()}}
\item \href{#method-LakehouseClient-list_collections_json}{\code{LakehouseClient$list_collections_json()}}
\item \href{#method-LakehouseClient-list_file}{\code{LakehouseClient$list_file()}}
\item \href{#method-LakehouseClient-list_files_df}{\code{LakehouseClient$list_files_df()}}
\item \href{#method-LakehouseClient-list_files_json}{\code{LakehouseClient$list_files_json()}}
\item \href{#method-LakehouseClient-upload_dataframe}{\code{LakehouseClient$upload_dataframe()}}
\item \href{#method-LakehouseClient-upload_file}{\code{LakehouseClient$upload_file()}}
\item \href{#method-LakehouseClient-search_collections_by_keyword}{\code{LakehouseClient$search_collections_by_keyword()}}
\item \href{#method-LakehouseClient-search_files_by_keyword}{\code{LakehouseClient$search_files_by_keyword()}}
\item \href{#method-LakehouseClient-search_collections_query}{\code{LakehouseClient$search_collections_query()}}
\item \href{#method-LakehouseClient-search_files_query}{\code{LakehouseClient$search_files_query()}}
\item \href{#method-LakehouseClient-clone}{\code{LakehouseClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$new(lakehouse_url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lakehouse_url}}{The url to the lakehouse api host}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-auth"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-auth}{}}}
\subsection{Method \code{auth()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$auth(email, password)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{email}}{A string containing the user email}

\item{\code{password}}{A string containing the user password}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-download_file"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-download_file}{}}}
\subsection{Method \code{download_file()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$download_file(catalog_file_id, output_file_dir)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{catalog_file_id}}{A string with the catalog id for the file record to be downloaded}

\item{\code{output_file_dir}}{A string containing the output file directory}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string with the path to the output file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-create_collection"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-create_collection}{}}}
\subsection{Method \code{create_collection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$create_collection(
  storage_type,
  collection_name,
  namenode_address = NULL,
  bucket_name = NULL,
  collection_description = NULL,
  public = NULL,
  secret = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{storage_type}}{A string containing the storage type ("gcs" for google cloud storage, "s3" for amazon s3, "hdfs" for hadoop hdfs)}

\item{\code{collection_name}}{A string containing the new collection's name}

\item{\code{namenode_address}}{An optional string containing the ip address or URL to the Hadoop namenode}

\item{\code{bucket_name}}{An optional string containing the cloud bucket name}

\item{\code{collection_description}}{An optional string containing additional description for this collection}

\item{\code{public}}{Optional boolean value indicating whether the collection will be public (TRUE or FALSE)}

\item{\code{secret}}{Optional boolean value indicating whether the collection will be secret (TRUE or FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataset containing the collection's information in the catalog
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-get_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-get_dataframe}{}}}
\subsection{Method \code{get_dataframe()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$get_dataframe(catalogue_file_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{catalogue_file_id}}{A string with the catalog id for the file record to be downloaded}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe representing the file selected
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_buckets"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_buckets}{}}}
\subsection{Method \code{list_buckets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_buckets()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a table-formatted string with the storage buckets in the system
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_buckets_df"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_buckets_df}{}}}
\subsection{Method \code{list_buckets_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_buckets_df()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns an R dataframe with the storage buckets in the system
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_buckets_json"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_buckets_json}{}}}
\subsection{Method \code{list_buckets_json()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_buckets_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a json-formatted string with the storage buckets in the system
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_collections"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_collections}{}}}
\subsection{Method \code{list_collections()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_collections(sort_by_key = NULL, sort_desc = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sort_by_key}}{A string containing a valid catalog key to be user for sorting the response}

\item{\code{sort_desc}}{A boolean indicating if the reponse list should be sorted descending}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A R dataframe cotaining the collection records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_collections_df"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_collections_df}{}}}
\subsection{Method \code{list_collections_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_collections_df(sort_by_key = NULL, sort_desc = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sort_by_key}}{A string containing a valid catalog key to be user for sorting the response}

\item{\code{sort_desc}}{A boolean indicating if the reponse list should be sorted descending}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A R dataframe cotaining the collection records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_collections_json"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_collections_json}{}}}
\subsection{Method \code{list_collections_json()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_collections_json(sort_by_key = NULL, sort_desc = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_file"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_file}{}}}
\subsection{Method \code{list_file()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_file(
  include_raw = TRUE,
  include_processed = TRUE,
  include_curated = TRUE,
  sort_by_key = NULL,
  sort_desc = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_raw}}{A Boolean value indicating if the raw files should be included in the response}

\item{\code{include_processed}}{A Boolean value indicating if the processed files should be included in the response}

\item{\code{include_curated}}{A Boolean value indicating if the curated files should be included in the response}

\item{\code{sort_by_key}}{A string containing a valid catalog key to be user for sorting the response}

\item{\code{sort_desc}}{A boolean indicating if the reponse list should be sorted descending}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table-formatted string cotaining the file records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_files_df"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_files_df}{}}}
\subsection{Method \code{list_files_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_files_df(
  include_raw = TRUE,
  include_processed = TRUE,
  include_curated = TRUE,
  sort_by_key = NULL,
  sort_desc = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_raw}}{A Boolean value indicating if the raw files should be included in the response}

\item{\code{include_processed}}{A Boolean value indicating if the processed files should be included in the response}

\item{\code{include_curated}}{A Boolean value indicating if the curated files should be included in the response}

\item{\code{sort_by_key}}{A string containing a valid catalog key to be user for sorting the response}

\item{\code{sort_desc}}{A boolean indicating if the reponse list should be sorted descending}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A R dataframe cotaining the file records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-list_files_json"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-list_files_json}{}}}
\subsection{Method \code{list_files_json()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$list_files_json(
  include_raw = TRUE,
  include_processed = TRUE,
  include_curated = TRUE,
  sort_by_key = NULL,
  sort_desc = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_raw}}{A Boolean value indicating if the raw files should be included in the response}

\item{\code{include_processed}}{A Boolean value indicating if the processed files should be included in the response}

\item{\code{include_curated}}{A Boolean value indicating if the curated files should be included in the response}

\item{\code{sort_by_key}}{A string containing a valid catalog key to be user for sorting the response}

\item{\code{sort_desc}}{A boolean indicating if the reponse list should be sorted descending}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A json-formatted string cotaining the file records
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-upload_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-upload_dataframe}{}}}
\subsection{Method \code{upload_dataframe()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$upload_dataframe(
  df,
  df_name,
  collection_catalog_id,
  dataframe_description = "",
  file_category = "structured",
  dataframe_version = 1,
  public = FALSE,
  processing_level = "raw"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataframe_description}}{[Optional]: Additional description for the file}

\item{\code{dataframe_version}}{[Optional, default 1]: The version of this dataframe in the system}

\item{\code{public}}{[Optional, default False]: The visibility of the dataframe, if public all users can see in the catalog}

\item{\code{processing_level}}{[Optional, default raw]: The processing level of this dataframe}

\item{\code{df:}}{The R dataframe contaiing the data}

\item{\code{df_name:}}{the dataframe name only, without the extension. By default the dataframe will be stored as a CSV file}

\item{\code{collection_catalog_id:}}{the collection identifiyer, from the collection catalog, where the file will be placed in}

\item{\code{file_category:}}{the file class must indicate if the file is 'structured' or 'unstructured', by default the file is set to be 'unstructured'. Structured files can be Columnar or document files such as csv, tsv, excel, json, parquet.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-upload_file"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-upload_file}{}}}
\subsection{Method \code{upload_file()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$upload_file(
  local_file_path,
  final_file_name,
  collection_catalog_id,
  file_category = "unstructured",
  file_description = NULL,
  file_version = 1,
  file_size = 0,
  public = FALSE,
  processing_level = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_description}}{[Optional]: Additional description for the file}

\item{\code{file_version}}{[Optional, default 1]: The version of the file you are uploading for version control}

\item{\code{file_size}}{[Optional, default 0]: The size of the file you are uploading in bytes, the sizen will be taken by default from your system}

\item{\code{public}}{[Optional, default False]: The visibility of the dataframe, if public all users can see in the catalog}

\item{\code{processing_level}}{[Optional]: A string containing the processing level of the file to be uploaded, e.g., ["raw", "processed", "curated"]}

\item{\code{local_file_path:}}{the local path to the file to be uploaded}

\item{\code{final_file_name:}}{the output file name in the storage}

\item{\code{collection_catalog_id:}}{the collection identifiyer, from the collection catalog, where the file will be placed in}

\item{\code{file_category:}}{the file class must indicate if the file is 'structured' or 'unstructured', by default the file is set to be 'unstructured'. Structured files can be Columnar or document files such as csv, tsv, excel, json, parquet.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a dataframe containing the catalog record for the inserted file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-search_collections_by_keyword"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-search_collections_by_keyword}{}}}
\subsection{Method \code{search_collections_by_keyword()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$search_collections_by_keyword(keyword, output_format = "table")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keyword}}{A string containing the keyword to search for, the search will match the collection names to the keyword}

\item{\code{output_format}}{A string containing one of the following options ["df", "json", "dict"]}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of collections in the given output_format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-search_files_by_keyword"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-search_files_by_keyword}{}}}
\subsection{Method \code{search_files_by_keyword()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$search_files_by_keyword(keyword, output_format = "table")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keyword}}{A string containing the keyword to search for, the search will match the file names to the keyword}

\item{\code{output_format}}{A string containing one of the following options ["df", "json", "dict"]}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of files in the given output_format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-search_collections_query"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-search_collections_query}{}}}
\subsection{Method \code{search_collections_query()}}{
Search files on the catalogue based on the given filters using query strings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$search_collections_query(self, ..., output_format = "table")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{self}}{The object reference (for object-oriented style implementation)}

\item{\code{...}}{Query strings containing search terms in KEY[OPERATOR]VALUE format}

\item{\code{output_format}}{A string specifying the output format (default: "dict")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The search results in the requested format. Returns an empty list if no results found or if error occurs.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Basic usage
search_collections_query(self, 'collection_name*lake')

# Multiple conditions
search_collections_query(self,
                        'collection_name*lake',
                        'inserted_by=user1@gmail.com',
                        'inserted_at>1747934722',
                        'public=TRUE',
                        output_format='table')
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-search_files_query"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-search_files_query}{}}}
\subsection{Method \code{search_files_query()}}{
Search files on the catalogue based on the given filters using query strings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$search_files_query(self, ..., output_format = "table")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{self}}{The object reference (for object-oriented style implementation)}

\item{\code{...}}{Query strings containing search terms in KEY[OPERATOR]VALUE format}

\item{\code{output_format}}{A string specifying the output format (default: "dict")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The search results in the requested format. Returns an empty list if no results found or if error occurs.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Basic usage
search_files_query(self, 'file_name*lake')

# Multiple conditions
search_files_query(self,
                        'file_name*lake',
                        'inserted_by=user1@gmail.com',
                        'inserted_at>1747934722',
                        'public=TRUE',
                        output_format='table')
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LakehouseClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LakehouseClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LakehouseClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
